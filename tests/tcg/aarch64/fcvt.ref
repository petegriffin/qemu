### Rounding to nearest
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfc00  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x4170  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4248  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7c00  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657868800000000000e+09 / 0x4f7f8000  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675456000000000000e+09 / 0x4e805bf1  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07853004800000000000e+09 / 0x4e809220  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518131200000000000e+09 / 0x4eb23d50  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
### Rounding upwards
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfbff  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138310e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x4170  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4249  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7c00  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657868800000000000e+09 / 0x4f7f8000  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138310e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675456000000000000e+09 / 0x4e805bf1  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07853004800000000000e+09 / 0x4e809220  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518144000000000000e+09 / 0x4eb23d51  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
### Rounding downwards
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfc00  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138310e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8001  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x416f  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4248  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7bff  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657868800000000000e+09 / 0x4f7f8000  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138310e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675443200000000000e+09 / 0x4e805bf0  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07852992000000000000e+09 / 0x4e80921f  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518131200000000000e+09 / 0x4eb23d50  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
### Rounding to zero
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfbff  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x416f  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4248  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7bff  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657843200000000000e+09 / 0x4f7f7fff  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675443200000000000e+09 / 0x4e805bf0  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07852992000000000000e+09 / 0x4e80921f  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518131200000000000e+09 / 0x4eb23d50  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
#### Enabling ARM Alternative Half Precision
### Rounding to nearest
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfc00  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x4170  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4248  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7c00  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657868800000000000e+09 / 0x4f7f8000  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675456000000000000e+09 / 0x4e805bf1  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07853004800000000000e+09 / 0x4e809220  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518131200000000000e+09 / 0x4eb23d50  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
### Rounding upwards
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750797e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324219e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859812e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfbff  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138310e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0x01  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x4170  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4249  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7c00  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657868800000000000e+09 / 0x4f7f8000  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138310e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509080e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675456000000000000e+09 / 0x4e805bf1  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311600e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07853004800000000000e+09 / 0x4e809220  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518144000000000000e+09 / 0x4eb23d51  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
### Rounding downwards
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859812e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750797e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfc00  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138310e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8001  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x416f  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4248  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7bff  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570815e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657868800000000000e+09 / 0x4f7f8000  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138310e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675443200000000000e+09 / 0x4e805bf0  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07852992000000000000e+09 / 0x4e80921f  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518131200000000000e+09 / 0x4eb23d50  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
### Rounding to zero
Converting single-precision to half-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02   HALF: 0000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
Converting single-precision to double-precision
00 SINGLE: -3.40282346638528859811e+38 / 0xff7fffff  (0 => OK)
00 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
01 SINGLE: -1.17549435082228750796e-38 / 0x80800000  (0 => OK)
01 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
02 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
02 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
03 SINGLE: 1.17549435082228750796e-38 / 0x00800000  (0 => OK)
03 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
04 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
05 SINGLE: 2.00000000000000000000e+00 / 0x40000000  (0 => OK)
05 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 SINGLE: 2.71828174591064453125e+00 / 0x402df854  (0 => OK)
06 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
07 SINGLE: 3.14159274101257324218e+00 / 0x40490fdb  (0 => OK)
07 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
08 SINGLE: 2.66182092800000000000e+09 / 0x4f1ea82a  (0 => OK)
08 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
09 SINGLE: 2.87892992000000000000e+09 / 0x4f2b98fc  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
10 SINGLE: 3.40282346638528859811e+38 / 0x7f7fffff  (0 => OK)
10 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0x18 =>  UNDERFLOW  INEXACT )
Converting double-precision to half-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00   HALF: 0xfbff  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01   HALF: 0xc000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02   HALF: 0xbc00  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03   HALF: 0x8000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04   HALF: 0000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05   HALF: 0000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06   HALF: 0x3c00  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07   HALF: 0x4000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08   HALF: 0x416f  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09   HALF: 0x4248  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10   HALF: 0x7bff  (0x14 => OVERFLOW   INEXACT )
Converting double-precision to single-precision
00 DOUBLE: -1.79769313486231570814e+308 / 0x00ffefffffffffffff  (0 => OK)
00 SINGLE: 4.28657843200000000000e+09 / 0x4f7f7fff  (0x14 => OVERFLOW   INEXACT )
01 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
01 SINGLE: 3.22122547200000000000e+09 / 0x4f400000  (0 => OK)
02 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
02 SINGLE: 3.21283686400000000000e+09 / 0x4f3f8000  (0 => OK)
03 DOUBLE: -2.22507385850720138309e-308 / 0x008010000000000000  (0 => OK)
03 SINGLE: 2.14748364800000000000e+09 / 0x4f000000  (0x18 =>  UNDERFLOW  INEXACT )
04 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
04 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
05 DOUBLE: 2.22507385850720138309e-308 / 0x000010000000000000  (0 => OK)
05 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0x18 =>  UNDERFLOW  INEXACT )
06 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
06 SINGLE: 1.06535321600000000000e+09 / 0x4e7e0000  (0 => OK)
07 DOUBLE: 2.00000000000000000000e+00 / 0x004000000000000000  (0 => OK)
07 SINGLE: 1.07374182400000000000e+09 / 0x4e800000  (0 => OK)
08 DOUBLE: 2.71828182845904509079e+00 / 0x004005bf0a8b145769  (0 => OK)
08 SINGLE: 1.07675443200000000000e+09 / 0x4e805bf0  (0x10 =>    INEXACT )
09 DOUBLE: 3.14159265358979311599e+00 / 0x00400921fb54442d18  (0 => OK)
09 SINGLE: 1.07852992000000000000e+09 / 0x4e80921f  (0x10 =>    INEXACT )
10 DOUBLE: 2.79112157760473600000e+15 / 0x004323d5054450ed00  (0 => OK)
10 SINGLE: 1.49518131200000000000e+09 / 0x4eb23d50  (0x10 =>    INEXACT )
Converting half-precision to single-precision
00   HALF: 0xffff  (0 => OK)
00 SINGLE: -nan / 0xffffe000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 SINGLE: -nan / 0xffdfe000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 SINGLE: -nan / 0xffc02000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 SINGLE: -inf / 0xff800000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 SINGLE: -6.55040000000000000000e+04 / 0xc77fe000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 SINGLE: -2.00000000000000000000e+00 / 0xc0000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 SINGLE: -1.00000000000000000000e+00 / 0xbf800000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 SINGLE: -5.96046447753906250000e-08 / 0xb3800000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 SINGLE: -0.00000000000000000000e+00 / 0x80000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 SINGLE: 0.00000000000000000000e+00 / 0000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 SINGLE: 5.96046447753906250000e-08 / 0x33800000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 SINGLE: 1.00000000000000000000e+00 / 0x3f800000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 SINGLE: 6.55040000000000000000e+04 / 0x477fe000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 SINGLE: inf / 0x7f800000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 SINGLE: nan / 0x7fc02000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 SINGLE: nan / 0x7fdfe000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 SINGLE: nan / 0x7fffe000  (0 => OK)
Converting half-precision to double-precision
00   HALF: 0xffff  (0 => OK)
00 DOUBLE: -nan / 0x00fffffc0000000000  (0 => OK)
01   HALF: 0xfcff  (0 => OK)
01 DOUBLE: -nan / 0x00fffbfc0000000000  (0x1 =>     INVALID)
02   HALF: 0xfc01  (0 => OK)
02 DOUBLE: -nan / 0x00fff8040000000000  (0x1 =>     INVALID)
03   HALF: 0xfc00  (0 => OK)
03 DOUBLE: -inf / 0x00fff0000000000000  (0 => OK)
04   HALF: 0xfbff  (0 => OK)
04 DOUBLE: -6.55040000000000000000e+04 / 0x00c0effc0000000000  (0 => OK)
05   HALF: 0xc000  (0 => OK)
05 DOUBLE: -2.00000000000000000000e+00 / 0x00c000000000000000  (0 => OK)
06   HALF: 0xbc00  (0 => OK)
06 DOUBLE: -1.00000000000000000000e+00 / 0x00bff0000000000000  (0 => OK)
07   HALF: 0x8001  (0 => OK)
07 DOUBLE: -5.96046447753906250000e-08 / 0x00be70000000000000  (0 => OK)
08   HALF: 0x8000  (0 => OK)
08 DOUBLE: -0.00000000000000000000e+00 / 0x008000000000000000  (0 => OK)
09   HALF: 0000  (0 => OK)
09 DOUBLE: 0.00000000000000000000e+00 / 00000000000000000000  (0 => OK)
10   HALF: 0x01  (0 => OK)
10 DOUBLE: 5.96046447753906250000e-08 / 0x003e70000000000000  (0 => OK)
11   HALF: 0x3c00  (0 => OK)
11 DOUBLE: 1.00000000000000000000e+00 / 0x003ff0000000000000  (0 => OK)
12   HALF: 0x7bff  (0 => OK)
12 DOUBLE: 6.55040000000000000000e+04 / 0x0040effc0000000000  (0 => OK)
13   HALF: 0x7c00  (0 => OK)
13 DOUBLE: inf / 0x007ff0000000000000  (0 => OK)
14   HALF: 0x7c01  (0 => OK)
14 DOUBLE: nan / 0x007ff8040000000000  (0x1 =>     INVALID)
15   HALF: 0x7cff  (0 => OK)
15 DOUBLE: nan / 0x007ffbfc0000000000  (0x1 =>     INVALID)
16   HALF: 0x7fff  (0 => OK)
16 DOUBLE: nan / 0x007ffffc0000000000  (0 => OK)
